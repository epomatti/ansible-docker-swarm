- name: Create Docker Swarm Cluster
  hosts: localhost
  connection: local

  vars_files:
    - ./vars/external_vars.yml

  tasks:

    ### Group ###

    - name: Create resource group
      azure_rm_resourcegroup:
        name: "rg-swarm-{{ instance }}"
        location: "{{ location }}"
        tags: "{{ tags }}"
      register: resource_group

    ### Networking ###

    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group.state.name }}"
        name: "vnet-swarm-{{ instance }}"
        address_prefixes: "10.0.0.0/16"
      register: vnet

    - name: Add managers subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group.state.name }}"
        name: Subnet-Managers-001
        address_prefix: "10.0.10.0/27"
        virtual_network: "{{ vnet.state.name }}"

    - name: Add workers subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group.state.name }}"
        name: Subnet-Workers-001
        address_prefix: "10.0.20.0/24"
        virtual_network: "{{ vnet.state.name }}"

    

    

  # - name: Create public IP address
  #   azure_rm_publicipaddress:
  #     resource_group: myResourceGroup
  #     allocation_method: Static
  #     name: myPublicIP
  #   register: output_ip_address
  # - name: Dump public IP for VM which will be created
  #   debug:
  #     msg: "The public IP is {{ output_ip_address.state.ip_address }}."
  # - name: Create Network Security Group that allows SSH
  #   azure_rm_securitygroup:
  #     resource_group: myResourceGroup
  #     name: myNetworkSecurityGroup
  #     rules:
  #       - name: SSH
  #         protocol: Tcp
  #         destination_port_range: 22
  #         access: Allow
  #         priority: 1001
  #         direction: Inbound
  # - name: Create virtual network interface card
  #   azure_rm_networkinterface:
  #     resource_group: myResourceGroup
  #     name: myNIC
  #     virtual_network: myVnet
  #     subnet: mySubnet
  #     public_ip_name: myPublicIP
  #     security_group: myNetworkSecurityGroup
  # - name: Create VM
  #   azure_rm_virtualmachine:
  #     resource_group: myResourceGroup
  #     name: myVM
  #     vm_size: Standard_DS1_v2
  #     admin_username: azureuser
  #     ssh_password_enabled: false
  #     ssh_public_keys:
  #       - path: /home/azureuser/.ssh/authorized_keys
  #         key_data: <your-key-data>
  #     network_interfaces: myNIC
  #     image:
  #       offer: CentOS
  #       publisher: OpenLogic
  #       sku: '7.5'
  #       version: latest